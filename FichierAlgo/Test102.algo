ALGORITHME TestExpression
variable:
    v : caractère  
    w : chaîne de caractères
    x : entier
    y : réel
    z : booléen
DEBUT
    // operateur unaire + -
    x <--  5    // 5
    x <-- -5   // -5
    x <-- +5  // -5
    x <-- -x   // 5
    // operateur binaire + - 
    x <-- 7 + 4
    x <-- 7 + 4 - 3
    x <-- 10 + x - 4
    x <-- -10 - x + 4

    // × / div mod
    y <-- 5 × 0.4 div 4     // 0
    y <-- 5 × 0.4 / 4        // 0.5 
    x <-- 12 × 3 mod 10 // 6
    y <-- y × y × 4          // 1.0

    // expressions arithmétiques complètes opérateurs unaires ^  \/¯ | | 
    x <-- x^2    // 36
    x <-- \/¯x   // 6
    x <-- |-89|  // 89
    y <-- |-1×((-5+12)^2×5)| + \/¯9

   // expressions booléennes simples
   z <-- x < 20
   z <-- x > y
   z <-- y <= 20
   z <-- y >= x
   z <-- x = 6
   z <-- x  /= y


   // expression booléennes complètes
   z <-- x < 20 et x /= y
   z <-- x < 20 ou x /= y
   z <-- x < 20 xou x /= y
   z <-- non ( z )
   z <--  non ( x < 20 ou x /= y )


   // primitives de conversion
   w <-- enChaine( y )
   w <-- "25"
   x  <-- enEntier ( w )
   x  <-- enEntier ( "20" )
   w <-- enChaine ( 20 / 3 + 3 )
   y  <-- enRéel ( w )
   y  <-- enRéel ( "20.004" )
   x <-- 65
   v  <-- car ( x )
   v  <-- car ( 75+2 )
   x  <-- ord ( v )
   x  <-- ord ( 'A'  )

   // primitives d’arrondi
   y  <-- 20.4
   x  <-- plancher( y )
   x  <-- plafond ( y )
   x  <-- arrondi ( y )

   // autres primitives
   w  <-- aujourdhui ( )
   x  <-- jour    ( w )
   x  <-- mois    ( w )
   x  <-- annee   ( w )
   z  <-- estReel ( w )
   z  <-- estEntier ( w )
   x  <-- hasard ( 20 )
FIN