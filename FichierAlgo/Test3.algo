ALGORITHME Test3
variable:
	v : caractère  
	w : chaîne de caractères
	x : entier
	y : réel
	z : booléen
DEBUT
	// operateur unaire + -
	x <--  5    // 5
	x <-- -5    // -5
	x <-- +5    // 5
	x <-- -x    // -5
	// operateur binaire + - 
	x <-- 7 + 4             // 11
	x <-- 7 + 4 - 3         // 8
	x <-- 10 + x - 4        // 14
	x <-- -10 - x + 4       // -20

	// × / div mod
	y <-- 5 × 0.4 div 4      // 0
	y <-- 5 × 0.4 / 4        // 0.5 
	x <-- 12 × 3 mod 10      // 6
	y <-- y × y × 4          // 1.0

	// expressions arithmétiques complètes opérateurs unaires ^  \/¯ | | 
	x <-- x^2    // 36
	x <-- \/¯ x  // 6
	x <-- |-89|  // 89
	y <-- |-1×((-5+12)^2×5)| + \/¯9 // 248.0

	// expressions booléennes simples
	z <-- x < 20     // faux
	z <-- x > y      // vrai
	z <-- y <= 20    // faux
	z <-- y >= x     // vrai
	z <-- x = 248    // vrai
	z <-- x  /= y    // vrai


	// expression booléennes complètes
	z <-- x < 20 et  x /= y         // faux
	z <-- x > 20 et  x /= y         // vrai
	z <-- x < 20 ou  x  = y         // faux
	z <-- x < 20 ou  x /= y         // vrai
	z <-- x > 20 xou x /= y         // faux
	z <-- x < 20 xou x /= y         // vrai
	z <-- non ( z )                 // faux
	z <--  non ( x < 20 ou x /= y ) // faux


	// primitives de conversion
	w <-- enChaine( y )            // 248.0
	w <-- "25"                     // 25
	x  <-- enEntier ( w )          // 25
	x  <-- enEntier ( "20" )       // 20
	w <-- enChaine ( 20 / 3 + 3 )  // 9.666..668
	y  <-- enRéel ( w )            // 9.666666666666668
	y  <-- enRéel ( "20.004" )     // 20.004
	x <-- 65                       // 65
	v  <-- car ( x )               // A
	v  <-- car ( 75+2 )            // M
	x  <-- ord ( v )               // 77
	x  <-- ord ( 'A'  )            // 65

	// primitives d'arrondi
	y  <-- 20.4               // 20.4
	x  <-- plancher( y )      // 20
	x  <-- plafond ( y )      // 21
	x  <-- arrondi ( y )      // 20

	// autres primitives
	w  <-- aujourdhui ( )    // 13/01/2022
	x  <-- jour    ( w )     // 13
	x  <-- mois    ( w )     // 1
	x  <-- annee   ( w )     // 2022
	z  <-- estReel ( w )     // faux
	w  <-- enChaine(20.0)    // 20.0
	z  <-- estReel ( w )     // vrai
	z  <-- estEntier( w )    // faux
	x  <-- hasard ( 20 )     // suspens

	// imbrications de primitives
	v <-- car(ord('A')+2×5)               // K
	w <-- enChaine(enReel("15")+ord('A')) // 80.0

	// x <-- 9
	ecrire ( x )

	/* 
		x <-- 10
		y <-- 2.5
	*/

	ecrire ( x © " " © y )

FIN
